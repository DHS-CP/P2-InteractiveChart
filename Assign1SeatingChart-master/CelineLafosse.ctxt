#BlueJ class context
comment0.target=CelineLafosse
comment0.text=\r\n\ The\ KilgoreTrout\ class\ can\ be\ used\ as\ a\ model\ for\ your\ own\ class\ that\ represents\ you\ and\ your\ seating\ location\ in\ AP\ CSA\r\n\ \r\n\ @author\ Celine\ Lafosse\r\n\ @version\ 2.0\ Aug\ 13,\ 2019\r\n
comment1.params=f\ l\ r\ s
comment1.target=CelineLafosse(java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ the\ CelineLafosse\ class.\r\n\ Constructors\ are\ special\ methods\ with\ the\ same\ exact\ name\ as\ the\ class\ name.\ \ \r\n\ Constructors\ to\ not\ have\ return\ types.\r\n\ Constructors\ can\ be\ overloaded.\ This\ means\ we\ can\ call\ a\ constructor\ with\ different\ sets\ of\ parameter\r\n\ \ lists\ to\ initalize\ for\ different\ conditions\ (depending\ on\ what\ constructors\ have\ been\ written.\r\n\ @param\ String\ f\ (firstname)\r\n\ @param\ String\ l\ (lastname)\r\n\ @param\ int\ r\ (row\ of\ seating\ arrangement)\r\n\ @param\ int\ s\ (seat\ number\ within\ row\ seating\ arrangement)\r\n\ \r\n
comment10.params=
comment10.target=void\ animationJumpUp()
comment10.text=\r\n\ animationJumpUp-\ Creates\ the\ animation\ of\ the\ avatar\ jumping\ to\ the\ top\ of\ the\ screen\r\n
comment11.params=
comment11.target=void\ circleClass()
comment11.text=\r\n\ circleClass-connects\ all\ the\ animation\ methods\ together\ to\ create\ the\ entire\ animation\r\n
comment12.params=s
comment12.target=void\ myHobby(java.lang.String)
comment12.text=\ \r\n\ \ prints\ myHobby\r\n
comment2.params=
comment2.target=CelineLafosse()
comment2.text=\r\n\ Default\ constructor,\ if\ you\ don't\ pass\ in\ a\ name\ and\ seating\ location\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Act\ -\ do\ whatever\ the\ CelineLafosse\ actor\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment4.params=
comment4.target=void\ getName()
comment4.text=\r\n\ Prints\ the\ first\ and\ last\ name\ to\ the\ console\r\n
comment5.params=
comment5.target=void\ hardQuestion()
comment5.text=\r\n\ hardQuestion\ -\ This\ method\ starts\ after\ the\ user\ asks\ the\ question\ "what\ was\ hard\ about\ the\ summer\ homework".\ At\ the\ end\ of\ the\ statements,\r\n\ it\ always\ asks\ if\ the\ user\ would\ like\ for\ the\ character\ to\ sit\ down.\ If\ they\ say\ no,\ it\ gives\ more\ options\ on\ what\ to\ say.\r\n\ If\ the\ user\ tells\ the\ interface\ "yes"\ or\ "sit",\ it\ ends.\r\n
comment6.params=
comment6.target=void\ answerQuestion()
comment6.text=\r\n\ answerQuestion-Starts\ the\ questions\ with\ "What\ would\ you\ like\ to\ know".\ If\ the\ user\ asks\ about\ anything\ that\ contains\ the\ word\ "hard",\ \r\n\ it\ starts\ the\ hardQuestion\ method.\ If\ it\ contains\ the\ word\ "yes",\ the\ student\ sits\ down.\ \r\n
comment7.params=
comment7.target=void\ animationRunTop()
comment7.text=\r\n\ animationRunTop\ -\ Creates\ the\ animation\ of\ the\ avatar\ running\ through\ the\ top\ by\ going\ through\ all\ the\ images\ quickly\ \r\n\ on\ loop\ until\ it\ gets\ to\ the\ end\ of\ the\ screen.\r\n
comment8.params=
comment8.target=void\ animationJumpDown()
comment8.text=\r\n\ animationRunTop\ -\ Creates\ the\ animation\ of\ the\ avatar\ jumping\ from\ the\ top,\ to\ the\ \r\n\ bottom\ of\ the\ screen\ \r\n
comment9.params=
comment9.target=void\ animationRunBack()
comment9.text=\r\n\ animationRunBack\ -\ Creates\ the\ animation\ of\ the\ avatar\ running\ on\ the\ bottom\ of\ the\ screen\r\n
numComments=13
